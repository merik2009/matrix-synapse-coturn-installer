version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: synapse
      POSTGRES_USER: synapse
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./configs/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - matrix_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U synapse"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Matrix Synapse
  synapse:
    image: matrixdotorg/synapse:latest
    restart: unless-stopped
    environment:
      SYNAPSE_SERVER_NAME: ${SERVER_NAME}
      SYNAPSE_REPORT_STATS: "no"
    volumes:
      - synapse_data:/data
      - ./configs/homeserver.yaml:/data/homeserver.yaml:ro
      - ./configs/log.config:/data/log.config:ro
      - ./ssl:/data/ssl:ro
    ports:
      - "${HTTP_PORT}:8008"
    networks:
      - matrix_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8008/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Coturn TURN Server
  coturn:
    image: coturn/coturn:latest
    restart: unless-stopped
    ports:
      - "${COTURN_PORT}:3478/tcp"
      - "${COTURN_PORT}:3478/udp"
      - "5349:5349/tcp"
      - "49152-65535:49152-65535/udp"
    volumes:
      - ./configs/turnserver.conf:/etc/turnserver.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    networks:
      - matrix_network
    command: ["-c", "/etc/turnserver.conf"]

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "${HTTPS_PORT}:8448"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx-sites:/etc/nginx/conf.d:ro
      - ./ssl:/etc/ssl/certs:ro
      - ./data/nginx-logs:/var/log/nginx
    networks:
      - matrix_network
    depends_on:
      - synapse
    healthcheck:
      test: ["CMD-SHELL", "nginx -t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Element Web Client (optional)
  element:
    image: vectorim/element-web:latest
    restart: unless-stopped
    volumes:
      - ./configs/element-config.json:/app/config.json:ro
    networks:
      - matrix_network
    ports:
      - "8080:80"

  # Redis for caching (optional but recommended for performance)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - matrix_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  matrix_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  synapse_data:
    driver: local
  redis_data:
    driver: local
